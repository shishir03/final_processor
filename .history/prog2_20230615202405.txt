lb r0 00101
mov r15 r0
lbr r2
addi r0 00000
lbr r3                  // MSB (for some fucking reason)
mov r0 r2
mov r5 r0
mov r0 r3
mov r6 r0
lb r1 00110             // shift loop start (16x iterations)
mov r0 r3
and r1
lb r0 01000
beq 0010
mov r0 r14
mov r1 r4
xor r4                  // r4 keeps track of total xor
mov r0 r2               // left shift
lsl r2
mov r0 r3
lsl r3
lb r1 00111
mov r0 r14
addi r0 00000
mov r14 r0
blt 0001
mov r0 r4
lb r1 01000
beq allthewaydown       // is the xor 0? (i.e. is the message error-free)
mov r0 r5
lb r1 01001
and r0
rxor r0
mov r0 r6
rxor r0
lb r1 01000
bne next                // does p0 = 0? (if so, there are 2 errors)
lb r0 01001
not r7
mov r0 r15
subi r0 00001
sbr r7
lb r0 01000
lb r1 01000
beq end                // unconditional branch
mov r0 r5
lsr r0
lb r1 01010
mov r0 r6
and r8
mov r0 r8
lsl r0
mov r1 r6
xor r1
lsr r0
lsr r1
lsr r0
lsr r1
lsr r0
lsr r1
lsr r0
lsr r1

